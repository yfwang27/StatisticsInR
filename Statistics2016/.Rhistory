showmean<-mean(test1)
plot(showmean,1,type="o",pch=22,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
test2<-rbinom(N,n,p)
showmane<-mean(test2)
set.seed(123)
# number, size and probability
N=10; n=1; p=0.5
test1<-rbinom(N,n,p)
showmean<-mean(test1)
plot(showmean,1,type="o",pch=22,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
test2<-rbinom(N,n,p)
showmane<-mean(test2)
plot(showmean,1,type="o",pch=22,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
test2<-rbinom(N,n,p)
showmane<-mean(test2)
plot(showmean,1,type="o",pch=22,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
showmane
plot(showmean,1,type="o",pch=22,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
showmean<-mean(test2)
plot(showmean,1,type="o",pch=22,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
plot(showmean,1,type="o",pch=20,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
set.seed(123)
mat4plot<-as.matrix()
?as.matrix
mat4plot<-matrix(nrow=10,ncol=2)
mat4plot
set.seed(123)
mat4plot<-matrix(nrow=10,ncol=2)
for (i in 1:10){
showtest<-rbinom(N,1,0.5)
showdensity<-dbinom(showtest, 10, 0.5, log = FALSE)
print(showdensity)
showmean<-mean(showtest)
print(showmean)
mat4plot[i,1]<-showmean
}
mat4plot
mat4plot[,2]<-1
plot(mat4plot,1,type="o",pch=20,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
mat4plot
class(mat4plot)
plot(mat4plot,type="o",pch=20,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
plot(mat4plot,pch=20,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
mat4plot<-mat4plot[order(mat4plot[,1]),]
mat4plot
unique(mat4plot[,1])
box(mat4plot[,1])
?box
?box
boxplot(mat4plot[,1])
hist(mat4plot[,1])
hist(mat4plot[,1],xlim=c(0,1))
hist(mat4plot[,1],xlim=c(0,1),breaks=10)
showmean
set.seed(123)
# number, size and probability
N=10; n=1; p=0.5
test1<-rbinom(N,n,p)
showmean<-mean(test1)
showmean
test2<-rbinom(N,n,p)
showmean2<-mean(test2)
showmean2
set.seed(123)
# number, size and probability
N=10; n=1; p=0.5
test1<-rbinom(N,n,p)
showmean<-mean(test1)
showmean
test2<-rbinom(N,n,p)
showmean2<-mean(test2)
showmean2
set.seed(123)
test3<-rbinom(N,2,p)
showmean3<-mean(test3)
showmean3
set.seed(123)
mat4plot<-matrix(nrow=10,ncol=2)
for (i in 1:10){
showtest<-rbinom(N,1,0.5)
#showdensity<-dbinom(showtest, 10, 0.5, log = FALSE)
showmean<-mean(showtest)
mat4plot[i,1]<-showmean
}
mat4plot[,2]<-1
#mat4plot<-mat4plot[order(mat4plot[,1]),]
#plot(mat4plot,pch=20,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
hist(mat4plot[,1],xlim=c(0,1),breaks=10)
set.seed(123)
mat4plot<-matrix(nrow=100,ncol=2)
for (i in 1:100){
showtest<-rbinom(N,1,0.5)
#showdensity<-dbinom(showtest, 10, 0.5, log = FALSE)
showmean<-mean(showtest)
mat4plot[i,1]<-showmean
}
mat4plot[,2]<-1
#mat4plot<-mat4plot[order(mat4plot[,1]),]
#plot(mat4plot,pch=20,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
hist(mat4plot[,1],xlim=c(0,1),breaks=10)
set.seed(123)
mat4plot<-matrix(nrow=1000,ncol=2)
for (i in 1:1000){
showtest<-rbinom(N,1,0.5)
#showdensity<-dbinom(showtest, 10, 0.5, log = FALSE)
showmean<-mean(showtest)
mat4plot[i,1]<-showmean
}
mat4plot[,2]<-1
#mat4plot<-mat4plot[order(mat4plot[,1]),]
#plot(mat4plot,pch=20,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
hist(mat4plot[,1],xlim=c(0,1),breaks=10)
?hist
hist(mat4plot[,1],xlim=c(0,1),breaks=10,freq=T)
hist(mat4plot[,1],xlim=c(0,1),breaks=10,freq=F)
hist(mat4plot[,1],xlim=c(0,1),breaks=10)
hist(mat4plot[,1],xlim=c(0,1),breaks=100)
set.seed(123)
no.experiment=2
mat4plot<-matrix(nrow=no.experiment,ncol=2)
for (i in 1:no.experiment){
showtest<-rbinom(N,1,0.5)
#showdensity<-dbinom(showtest, 10, 0.5, log = FALSE)
showmean<-mean(showtest)
mat4plot[i,1]<-showmean
}
mat4plot[,2]<-1
#mat4plot<-mat4plot[order(mat4plot[,1]),]
#plot(mat4plot,pch=20,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
hist(mat4plot[,1],xlim=c(0,1),breaks=100)
set.seed(123)
no.experiment=1
mat4plot<-matrix(nrow=no.experiment,ncol=2)
for (i in 1:no.experiment){
showtest<-rbinom(N,1,0.5)
#showdensity<-dbinom(showtest, 10, 0.5, log = FALSE)
showmean<-mean(showtest)
mat4plot[i,1]<-showmean
}
mat4plot[,2]<-1
#mat4plot<-mat4plot[order(mat4plot[,1]),]
#plot(mat4plot,pch=20,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
hist(mat4plot[,1],xlim=c(0,1),breaks=100)
set.seed(123)
no.experiment=12
mat4plot<-matrix(nrow=no.experiment,ncol=2)
for (i in 1:no.experiment){
showtest<-rbinom(N,1,0.5)
#showdensity<-dbinom(showtest, 10, 0.5, log = FALSE)
showmean<-mean(showtest)
mat4plot[i,1]<-showmean
}
mat4plot[,2]<-1
#mat4plot<-mat4plot[order(mat4plot[,1]),]
#plot(mat4plot,pch=20,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
hist(mat4plot[,1],xlim=c(0,1),breaks=100)
set.seed(123)
no.experiment=100
mat4plot<-matrix(nrow=no.experiment,ncol=2)
for (i in 1:no.experiment){
showtest<-rbinom(N,1,0.5)
#showdensity<-dbinom(showtest, 10, 0.5, log = FALSE)
showmean<-mean(showtest)
mat4plot[i,1]<-showmean
}
mat4plot[,2]<-1
#mat4plot<-mat4plot[order(mat4plot[,1]),]
#plot(mat4plot,pch=20,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
hist(mat4plot[,1],xlim=c(0,1),breaks=100)
set.seed(123)
no.experiment=1000
mat4plot<-matrix(nrow=no.experiment,ncol=2)
for (i in 1:no.experiment){
showtest<-rbinom(N,1,0.5)
#showdensity<-dbinom(showtest, 10, 0.5, log = FALSE)
showmean<-mean(showtest)
mat4plot[i,1]<-showmean
}
mat4plot[,2]<-1
#mat4plot<-mat4plot[order(mat4plot[,1]),]
#plot(mat4plot,pch=20,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
hist(mat4plot[,1],xlim=c(0,1),breaks=100)
set.seed(123)
no.experiment=1000
mat4plot<-matrix(nrow=no.experiment,ncol=2)
N<-100
for (i in 1:no.experiment){
showtest<-rbinom(N,1,0.5)
#showdensity<-dbinom(showtest, 10, 0.5, log = FALSE)
showmean<-mean(showtest)
mat4plot[i,1]<-showmean
}
mat4plot[,2]<-1
#mat4plot<-mat4plot[order(mat4plot[,1]),]
#plot(mat4plot,pch=20,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
hist(mat4plot[,1],xlim=c(0,1),breaks=100)
?rbinom
set.seed(123)
# observation number, number of trials and probability of success on each trial
sample.size=10;
test1<-rbinom(sample.size,1,0.5)
test1
showmean<-mean(test1)
showmean
test2<-rbinom(sample.size,1,0.5)
showmean2<-mean(test2)
showmean2
set.seed(123)
# observation number, number of trials and probability of success on each trial
sample.size=10;
test1<-rbinom(sample.size,1,0.5)
test1
showmean<-mean(test1)
showmean
test2<-rbinom(sample.size,1,0.5)
showmean2<-mean(test2)
showmean2
set.seed(123)
no.experiment=2
mat4plot<-matrix(nrow=no.experiment,ncol=2)
mat4plot[,2]<-1
for (i in 1:no.experiment){
mat4plot[i,1]<-mean(rbinom(sample.size,1,0.5))
}
hist(mat4plot[,1],xlim=c(0,1),breaks=100,xlab="mean",main="flip a coin 10 times, and repeat 2 times")
set.seed(123)
no.experiment=100
mat4plot<-matrix(nrow=no.experiment,ncol=2)
mat4plot[,2]<-1
sample.size<-10
for (i in 1:no.experiment){
mat4plot[i,1]<-mean(rbinom(sample.size,1,0.5))
}
hist(mat4plot[,1],xlim=c(0,1),breaks=100,xlab="mean",main="flip a coin 10 times, and it repeat 100 times")
set.seed(123)
no.experiment=1000
mat4plot<-matrix(nrow=no.experiment,ncol=2)
mat4plot[,2]<-1
sample.size<-100
for (i in 1:no.experiment){
mat4plot[i,1]<-mean(rbinom(sample.size,1,0.5))
}
hist(mat4plot[,1],xlim=c(0,1),breaks=100,xlab="mean",main="flip a coin 100 times, and repeat it 100 times")
set.seed(123)
no.experiment=1000
mat4plot<-matrix(nrow=no.experiment,ncol=2)
mat4plot[,2]<-1
sample.size<-10
for (i in 1:no.experiment){
mat4plot[i,1]<-mean(rbinom(sample.size,1,0.5))
}
hist(mat4plot[,1],xlim=c(0,1),breaks=100,xlab="mean",main="flip a coin 10 times, and it repeat 100 times")
no.experiment=100
mat4plot<-matrix(nrow=no.experiment,ncol=2)
mat4plot[,2]<-1
sample.size<-10
for (i in 1:no.experiment){
mat4plot[i,1]<-mean(rbinom(sample.size,1,0.5))
}
hist(mat4plot[,1],xlim=c(0,1),breaks=100,xlab="mean",main="flip a coin 10 times, and it repeat 100 times")
hist(mat4plot[,1],xlim=c(0,1),breaks=100,xlab="mean",main="flip a coin 10 times, and repeat it 1,000 times",freq = F)
lines(density(mat4plot[,1]),col="red",lwd=3)
set.seed(123)
no.experiment=1000
mat4plot<-matrix(nrow=no.experiment,ncol=2)
mat4plot[,2]<-1
sample.size<-10
for (i in 1:no.experiment){
mat4plot[i,1]<-mean(rbinom(sample.size,1,0.5))
}
hist(mat4plot[,1],xlim=c(0,1),breaks=100,xlab="mean",main="flip a coin 10 times, and repeat it 1,000 times")
lines(density(mat4plot[,1]),col="red",lwd=3)
?hist
hist(mat4plot[,1],xlim=c(0,1),breaks=100,xlab="mean",main="flip a coin 10 times, and repeat it 1,000 times",density = T)
set.seed(14)
x <- rchisq(100, df = 4)
hist(x, freq = FALSE, ylim = c(0, 0.2))
curve(dchisq(x, df = 4), col = 2, lty = 2, lwd = 2, add = TRUE)
curve(dbinom(x, df = 4), col = 2, lty = 2, lwd = 2, add = TRUE)
?dbinom
curve(dbinom(mat4plot[,1], 1, 0.5), col = 2, lty = 2, lwd = 2, add = TRUE)
?curve
plot(qnorm)
plot(qbionorm)
?qnorm
qbinom()
plot(qbinom)
library("tidyr")
install.packages("tidyr")
library("tidyr")
PlantGrowthforwide<-PlantGrowth
PlantGrowthforwide$replicate<-rep(c(1:10),3)
PlantGrowth_wide<-spread(PlantGrowthforwide, group, weight)
head(PlantGrowth_wide)
PlantGrowth
data("PlantGrowth")
PlantGrowth
PlantGrowthforwide<-PlantGrowth
PlantGrowthforwide$replicate<-rep(c(1:10),3)
PlantGrowth_wide<-spread(PlantGrowthforwide, group, weight)
head(PlantGrowth_wide)
qbiom
?qbiom()
?q()pbinom
?qbinom
set.seed(123)
no.experiment=10
mat4plot<-matrix(nrow=no.experiment,ncol=2);mat4plot[,2]<-1;
no.observation<-10
mat4plot[i,1]<-mean(rbinom(no.observation,1,0.5))
qbinom(rbinom(no.observation,1,0.5),1,lower.tail = T)
set.seed(123)
no.experiment=10
mat4plot<-matrix(nrow=no.experiment,ncol=2);mat4plot[,2]<-1;
no.observation<-10
mat4plot[i,1]<-mean(rbinom(no.observation,1,0.5))
i=1
mat4plot[i,1]<-mean(rbinom(no.observation,1,0.5))
qbinom(rbinom(no.observation,1,0.5),1,lower.tail = T)
qbinom(rbinom(no.observation,1,0.5),1,0.5,lower.tail = T)
rbinom(no.observation,1,0.5)
qbinom(no.observation,1,0.5)
rbinom(no.observation,1,0.5)
set.seed(123)
no.experiment=10
mat4plot<-matrix(nrow=no.experiment,ncol=2);mat4plot[,2]<-1;
no.observation<-10
i=1
testexperiment<-rbinom(no.observation,1,0.5)
mat4plot[i,1]<-mean(testexperiment)
mat4plot
pbinom(testexperiment,1,0.5,lower.tail = T)
testexperiment
qbinom(pbinom(testexperiment,1,0.5,lower.tail = T),1,0.5)
x <- seq(0,50,by=1)
y <- dbinom(x,50,0.2)
plot(x,y)
x <- seq(0,50,by=1)
z=qnorm(0.025,mean=0,sd=1,lower.tail = F)
x
z
z=qnorm(0.025,mean=0,sd=1,lower.tail = T)
z
z=qnorm(0.025,mean=0,sd=1,lower.tail = F)
vote.leave=17410742
vote.remain=16141241
total.vote=vote.leave+vote.remain
binom.test(vote.leave, total.vote, p=0.5, alternative = "less")
phat<-vote.leave/total.vote
phat.vote<-vote.leave/total.vote
z.vote<-qnorm(alpha.vote/2,mean=0,sd=1,lower.tail = F)
alpha.vote=0.05;
phat.vote<-vote.leave/total.vote
z.vote<-qnorm(alpha.vote/2,mean=0,sd=1,lower.tail = F)
ME<-z.vote*sqrt(phat.vote*(1-phat.vote)/total.vote)
CI.vote<-phat.vote + c(-ME.vote, ME.vote)
alpha.vote=0.05;
phat.vote<-vote.leave/total.vote
z.vote<-qnorm(alpha.vote/2,mean=0,sd=1,lower.tail = F)
ME.vote<-z.vote*sqrt(phat.vote*(1-phat.vote)/total.vote)
CI.vote<-phat.vote + c(-ME.vote, ME.vote)
CI.vote
?binom.confit
library(binom)
install.packages(bionom)
install.packages("bionom")
install.packages("binom")
library(binom)
?binom.confint
binom.confit(vote.leave, total.vote, conf.level=0.95, methods="all")
binom.confint(vote.leave, total.vote, conf.level=0.95, methods="all")
CI.vote
binom.test(vote.leave, total.vote, p=0.5, alternative = "less")
?prop.test
prop.test(vote.leave, total.vote, p=0.5, alternative = "less")
binom.test(vote.leave, total.vote, p=0.5, alternative = "two-sided")
binom.test(vote.leave, total.vote, p=0.5, alternative = "two.sided")
prop.test(vote.leave, total.vote, p=0.5, alternative = "two.sided")
?binom.confint
binom.confint(vote.leave, total.vote, conf.level = 0.95, methods = "asymptotic")
set.seed(123)
no.experiment=10
mat4plot<-matrix(nrow=no.experiment,ncol=1);#mat4plot[,2]<-1;
no.observation<-10
for (i in 1:no.experiment){
mat4plot[i,1]<-mean(rbinom(no.observation,1,0.5))
}
hist(mat4plot[,1],xlim=c(0,1),breaks=100,
xlab="mean",ylab="observed frequency",
main="flip a coin 10 times, and repeat it 10 times")
mat4plot
set.seed(123)
no.experiment=100
mat4plot<-matrix(nrow=no.experiment,ncol=1)
no.observation<-10
for (i in 1:no.experiment){
mat4plot[i,1]<-mean(rbinom(no.observation,1,0.5))
}
hist(mat4plot[,1],xlim=c(0,1),breaks=100,xlab="mean",ylab="observed frequency",
main="flip a coin 10 times, and repeat it 100 times")
set.seed(123)
no.experiment=1000
mat4plot<-matrix(nrow=no.experiment,ncol=1)
no.observation<-10
for (i in 1:no.experiment){
mat4plot[i,1]<-mean(rbinom(no.observation,1,0.5))
}
hist(mat4plot[,1],xlim=c(0,1),breaks=100,xlab="mean",
ylab="observed frequency",main="flip a coin 10 times, and repeat it 1,000 times")
no.experiment=1000
mat4plot<-matrix(nrow=no.experiment,ncol=1)
no.observation<-10
for (i in 1:no.experiment){
mat4plot[i,1]<-mean(rbinom(no.observation,1,0.5))
}
hist(mat4plot[,1],xlim=c(0,1),breaks=100,xlab="mean",ylab="observed frequency",
main="flip a coin 10 times, and repeat it 1,000 times",freq = F)
set.seed(123)
no.experiment=1000
mat4plot<-matrix(nrow=no.experiment,ncol=1)
no.observation<-10
for (i in 1:no.experiment){
mat4plot[i,1]<-mean(rbinom(no.observation,1,0.5))
}
hist(mat4plot[,1],xlim=c(0,1),breaks=100,xlab="mean",ylab="observed frequency",
main="flip a coin 10 times, and repeat it 1,000 times")
set.seed(123)
no.experiment=1000
mat4plot<-matrix(nrow=no.experiment,ncol=1)
no.observation<-100
for (i in 1:no.experiment){
mat4plot[i,1]<-mean(rbinom(no.observation,1,0.5))
}
hist(mat4plot[,1],xlim=c(0,1),breaks=100,xlab="mean",ylab="observed frequency",
main="flip a coin 100 times, and repeat it 1,000 times")
biom.result<-binom.test(vote.leave, total.vote, p=0.5, alternative = "two.sided")
biom.result$conf.int
str(biom.result)
library("tidyr")
set.seed(123)
no.experiment=1000
mat4plot<-matrix(nrow=no.experiment,ncol=1)
no.observation<-10
for (i in 1:no.experiment){
mat4plot[i,1]<-mean(rbinom(no.observation,1,0.5))
}
hist(mat4plot[,1],xlim=c(0,1),breaks=100,xlab="mean",ylab="observed frequency",
main="flip a coin 10 times, and repeat it for 1,000 times")
install.packages("dplyr")
library("dplyr")
data(iris)
class(iris)
str(iris)
points(c(0,1.781275),pch=20)
plot(iris_versi$Petal.Width,iris_versi$Petal.Length,xlim=c(0,1.8),ylim=c(0,5),
xlab="Petal Width of Iris.versicolor (x)",
ylab="Petal Length of Iris.versicolor (y)")
abline(lm(iris_versi$Petal.Length~iris_versi$Petal.Width,data=iris_versi),
col="blueviolet",lwd=3, lty=3)
points(c(0,1.781275),pch=20)
plot(iris_versi$Petal.Width,iris_versi$Petal.Length,xlim=c(0,1.8),ylim=c(0,5),
xlab="Petal Width of Iris.versicolor (x)",
ylab="Petal Length of Iris.versicolor (y)")
abline(lm(iris_versi$Petal.Length~iris_versi$Petal.Width,data=iris_versi),
col="blueviolet",lwd=3, lty=3)
points(x=0,y=1.781275,pch=20)
title("Scatter plot of Iris.versicolor Petal.Width vs Petal.Length")
?abline
lmResult$coefficients
iris_versi<-iris[iris$Species=="versicolor",]
str(iris_versi)
head(iris_versi[,c("Petal.Length","Species")])
mean(iris_versi$Petal.Length)
plot(iris_versi$Petal.Length, ylab="Petal Length of Iris.versicolor")
abline(h=mean(iris_versi$Petal.Length),
col="forestgreen",lwd=3)
plot(iris_versi$Petal.Length,ylab="Petal Length of Iris.versicolor")
abline(h=mean(iris_versi$Petal.Length),
col="forestgreen",lwd=3)
segments(x0=c(1:nrow(iris_versi)),y0=iris_versi$Petal.Length,
x1=c(1:nrow(iris_versi)),y1=mean(iris_versi$Petal.Length),col="pink")
plot(iris_versi$Petal.Width,iris_versi$Petal.Length,
xlab="Petal Width of Iris.versicolor (x)",
ylab="Petal Length of Iris.versicolor (y)")
abline(lm(iris_versi$Petal.Length~iris_versi$Petal.Width,data=iris_versi),
col="blueviolet",lwd=3, lty=3)
title("Scatter plot of Iris.versicolor Petal.Width vs Petal.Length")
lmResult<-lm(formula = Petal.Length ~ Petal.Width, data = iris_versi)
lmResult
lmResult$coefficients
str(lmResult)
summary(lmResult)
?predict
x <- rnorm(15)
y <- x + rnorm(15)
predict(lm(y ~ x))
new <- data.frame(x = seq(-3, 3, 0.5))
predict(lm(y ~ x), new, se.fit = TRUE)
pred.w.plim <- predict(lm(y ~ x), new, interval = "prediction")
pred.w.clim <- predict(lm(y ~ x), new, interval = "confidence")
matplot(new$x, cbind(pred.w.clim, pred.w.plim[,-1]),
lty = c(1,2,2,3,3), type = "l", ylab = "predicted y")
new
predict(lmResult,1)
lmResult
predict(lmResult,data.frame(x=c(1,2,3)))
predict(lmResult,data.frame(Petal.Width=c(1,2,3)))
3.650600-1.781
?predict
plot(c(-1, 26), 0:1, type = "n", axes = FALSE)
text(0:25, 0.6, 0:25, cex = 0.5)
points(0:25, rep(0.3, 26), pch = 0:25, bg = "grey")
