haha<-function (x, y){}
haha<-function(x,y){
x=5
y=x+2
}
haha(6)
haha<-function(x,y){
y=x+2
}
haha<-function(x){
y=x+2
print(y)
}
haha(2)
y
haha<-function(x,...){
y=x+2
print(y)
}
y
print(ok)
print("ok")
print ("R ok\n")
print ("R ok\\n")
print ("R ok")
source("http://bioconductor.org/biocLite.R")
biocLite("rTracklayer")
biocLite("rtracklayer")
library("rtracklayer")
?import
temp <- import("/CSC/project/Andrew/subread/bigwig/genes.gtf",asRangedData=FALSE)
class(temp)
str(temp)
length(temp$type)
head(temp$type)
tempExon <- temp[temp$type == "exon"]
dim(tempExon)
str(tempExon)
factor(temp$type)
tempExonFirst <- tempExon[tempExon$exon_number == 1]
class(tempExon)
nrow(tempExon)
ls
length(tempExonFirst)
head(tempExonFirst)
?resize
starttempExonFirst <- resize(tempExonFirst,1,fix = "start")
head(starttempExonFirst)
centredstarttempExonFirst <- resize(starttempExonFirst,300,fix="center")
seqlevelsStyle(centredstarttempExonFirst) <- "UCSC"
class(centredstarttempExonFirst)
head(centredstarttempExonFirst)
ir1 <- successiveIRanges(c(19, 5, 0, 8, 5))
ir1
19-1+1
24-20+1
shift(ir1, shift=-3)
?successiveIRanges
range1 <- IRanges(start=c(1, 2, 3), end=c(5, 2, 8))
range1
range2 <- IRanges(start=c(15, 45, 20, 1), end=c(15, 100, 80, 5))
range3 <- IRanges(start=c(-2, 6, 7), width=c(8, 0, 0))
range2
range3
collection <- IRangesList(one=range1, range2, range3)
collection
shift(collection, shift=5)
seqlevelsStyle(centredstarttempExonFirst) <- "Ensembl"
?seqlevelsStyle
centredstarttempExonFirst
ir2 <- ir1[width(ir1) != 0]
ir2
narrow(ir2, start=4, end=-2)
narrow(ir2, start=-4, end=-2)
ir2
ir4 <- IRanges(20:23, width=3)
ir4
promoters(ir4, upstream=0, downstream=1)
promoters(ir4, upstream=1, downstream=0)
ir2
resize(ir2, 200)
ir2
resize(ir2, 2, fix="end")
tempExonFirst <- tempExon[tempExon$exon_number == 1]
nrow(tempExonFirst)
head(tempExonFirst)
tempExon <- temp[temp$type == "exon"]
colnames(tempExon)
head(tempExon)
head(tempExon$exon_number)
head(tempExonFirst)
tempExonFirst <- tempExon[tempExon$exon_number == 1,]
tempExonFirst
tempExonFirst <- tempExon[tempExon$exon_number == 1]
class(tempExonFirst)
str(tempExonFirst)
tempExon$listData
tempExon$source
?seqlevelsStyle
?GenomeInfoDb
??GenomeInfoDb
genomeStyles("Homo_sapiens")
sequenceStyles("Homo_sapiens")
seqStyles("Homo_sapiens")
names(genomeStyles("Homo_sapiens"))
seqlevelsStyle("Homo_sapiens")
?seqlevelsStyle
centredstarttempExonFirst <- resize(starttempExonFirst,300,fix="center")
seqlevelsStyle(centredstarttempExonFirst) <- "Ensembl"
centredstarttempExonFirst <- resize(starttempExonFirst,300,fix="center")
seqlevelsStyle(centredstarttempExonFirst) <- "UCSC"
centredstarttempExonFirst
12018-11719+1
centredstarttempExonFirst <- resize(starttempExonFirst,300,fix="center")
seqlevelsStyle(centredstarttempExonFirst)
temp <- import("/CSC/project/Andrew/subread/bigwig/genes_ucsc.gtf",asRangedData=FALSE)
class(temp)
head(temp)
tempExon <- temp[temp$type == "exon"]
temp
tempExon <- temp[temp$type == "exon"]
tempExonFirst <- tempExon[tempExon$exon_number == 1]
starttempExonFirst <- resize(tempExonFirst,1,fix = "start")
centredstarttempExonFirst <- resize(starttempExonFirst,300,fix="center")
seqlevelsStyle(centredstarttempExonFirst)
rm(temp)
rm(centredstarttempExonFirst)
temp <- import("/CSC/project/Andrew/subread/bigwig/genes_ucsc.gtf",asRangedData=FALSE)
str(temp)
tempExon <- temp[temp$type == "exon"]
head(tempExon)
tempExon$exon_number
temp2 <- import("/CSC/project/Andrew/subread/bigwig/genes_ucsc.gtf",asRangedData=T)
temp2 <- import("/CSC/project/Andrew/subread/bigwig/genes_ucsc.gtf",asRangedData=TRUE)
session<-browserSession("UCSC")
session
genomeBrowsers()
temp <- import("/CSC/project/Andrew/subread/bigwig/genes_ensembl.gtf",asRangedData=FALSE)
tempExon <- temp[temp$type == "exon"]
tempExonFirst <- tempExon[tempExon$exon_number == 1]
starttempExonFirst <- resize(tempExonFirst,1,fix = "start")
centredstarttempExonFirst <- resize(starttempExonFirst,300,fix="center")
seqlevelsStyle(centredstarttempExonFirst)
?subjunc
library(Rsubread)
?subjunc
head(centredstarttempExonFirst)
?featureCounts
head(tempExonFirst)
tempchr1<-tempExonFirst[tempExonFirst$seqnames==1]
tail(tempchr1)
tempchr1
tempchr1<-tempExonFirst[tempExonFirst$seqnames=="1"]
tempchr1
tempExonFirst$seqnames
tempExonFirst$seqnames
tempExonFirst$gene_id
g <- GRanges(seqnames = rep(c("chr1", "chr2"), each = 10), ranges = IRanges(start = sample(1:100,
20), end = sample(100:1000, 20)), strand = "+")
g
g.chr <- split(g, seqnames(g))
g.chr
?split
lapply(g.chr, range)
?range
library(Rsamtools)
ex1_file<-system.file("extdata","ex1.bam",package="Rsamtools")
class(ex1_file)
ex1_file
gal<-import(ex1_file,param=ScanBamParam(what="flag"))
class(gal)
str(gal)
gal.minus<-gal[strand(gal)=="-"]
gal.minus
seqnames(gal)
strand(gal)
?import
?import
library(rtracklayer)
load("/CSC/project/chip-seq/chipqc/RAD21_CTCF_Exp.RData")
RAD21_CTCF
189140110-18196841
18914011-18196841
message("Normalised coverage..",appendLF=FALSE)
qcdata=RAD21_CTCF
qcdata=RAD21_CTCF
qcdata
qc@FlagAndTagCounts["MapQPass"]
qcdata@FlagAndTagCounts["MapQPass"]
?fragmentlength
fragmentlength(qcdata)
extendBy <- fragmentlength(qcdata)
qcdata$FlagAndTagCounts
qcdata
?readGAlignmentsFromBam
library("seqgsea")
library("SeqGSEA")
?runDESeq
runDESeq()
?runDESeq()
runDESeq {SeqGSEA}
runDESeq
library(DESeq2)
?newCountDataSet
?read.delim
library("gskb")
source("https://bioconductor.org/biocLite.R")
biocLite("gskb")
session()
sessionInfo()
library(gskb)
data("mm_pathway")
str(mm_pathway)
class(mm_pathway)
dim(mm_pathway)
length(mm_pathway)
.libPaths(c(.libPaths()[2],.libPaths()[1]))
library(ChIPQC)
Arguments <- commandArgs(trailingOnly = T)
Arguments
library(goseq)
?goseq
supportedGeneIDs()
write.csv(supportedGeneIDs(),file="/CSC/project/Silvia/newRNAseq/goseq/supportedgeneid.csv")
write.csv(supportedGenomes(),file="/CSC/project/Silvia/newRNAseq/goseq/supportedgenomes.csv")
18530758+18780710+20095730
57407198-6211642
# Make the canvas
plot(1:10,1:10,xlim=c(-5,5),ylim=c(0,10),type="n",xlab="",ylab="",xaxt="n",yaxt="n")
# Make the branches
rect(-1,0,1,2,col="tan3",border="tan4",lwd=3)
polygon(c(-5,0,5),c(2,4,2),col="palegreen3",border="palegreen4",lwd=3)
polygon(c(-4,0,4),c(3.5,5.5,3.5),col="palegreen4",border="palegreen3",lwd=3)
polygon(c(-3,0,3),c(5,6.5,5),col="palegreen3",border="palegreen4",lwd=3)
polygon(c(-2,0,2),c(6.25,7.5,6.25),col="palegreen4",border="palegreen3",lwd=3)
#Add some ornaments
points(x=runif(4,-5,5),y=rep(2,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-4,4),y=rep(3.5,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-3,3),y=rep(5,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-2,2),y=rep(6.25,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(0,7.5,pch=8,cex=5,col="gold",lwd=3)
# Add some presents
xPres = runif(10,-4.5,4.5)
xWidth = runif(10,0.1,0.5)
xHeight=runif(10,0,1)
for(i in 1:10){
rect(xPres[i]-xWidth[i],0,xPres[i]+xWidth[i],xHeight[i],col=sample(c("blue","red"),size=1))
rect(xPres[i]-0.2*xWidth[i],0,xPres[i]+0.2*xWidth[i],xHeight[i],col=sample(c("gold","grey87"),size=1))
}
sessionInfo()
library("DESeq2")
library("limma")
library("Rsubread")
library(ggplot2)
library("ggplot2")
library(GenomicRanges)
library(rtracklayer)
library(Rsubread)
library(DESeq2)
library("RColorBrewer")
library(gplots)
library(reshape2)
library(goseq)
library(biomaRt)
library(rtracklayer)
library(BSgenome)
library(ChIPpeakAnno)
sessionInfo()
write.table(sessionInfo(),file="/Volumes/PANMAC/MRC/sessioninfo.txt")
haha<-sessionInfo()
haha
class(haha)
writeLines(haha, sep="\n" ,file="/Volumes/PANMAC/MRC/sessioninfo.txt")
writeLines(haha, sep="\n")
haha
library(ChIPQC)
baseDir <- "/CSC/project/chip-seq/sorroin_chip/chip_pipe_newname"
SampleSheet <- "/CSC/project/chip-seq/sorroin_chip/chip_pipe_newname/Pipelinesamplesheet.txt"
organism <- "mm9"
ss <- read.delim(SampleSheet,sep="\t",header=T)
ss
head(ss)
ss <- read.delim(SampleSheet,sep="\t",header=F)
ss
if(organism == "mm9"){
chromosomes=c("chr1","chr2","chr3","chr4","chr5","chr6","chr7","chr8","chr9","chr10","chr11","chr12","chr13","chr14","chr15","chr16","chr17","chr18","chr19","chrX","chrY")
blklist <- "/CSC/project/chip-seq/sorroin_chip/chip_pipeline/mm9-blacklist.bed"
}else{
blklist <- NULL
chromosomes=NULL
}
bamFiles <- dir(file.path(baseDir,"AlignedData"),pattern="*.DupMarked\\.bam$",full.name=T)
bamBase <- gsub("DupMarked\\.bam","",basename(bamFiles))
bamFrame <- cbind(bamBase,bamFiles)
peaks <-  dir(file.path(baseDir,"Macs"),pattern="*_peaks.bed$",full.name=T)
peaksBase <- gsub("_WithInput.*","",basename(peaks))
peakFrame <- cbind(peaksBase,peaks)
ss <- ss[ss[,11] == "Report",]
ssFrame <- merge(ss[,c(2,4,6,7,8,9,10,11)]
,merge(bamFrame,peakFrame,by=1,all.x=T,all.y=F)
,by=1,all.x=F,all.y=F)
ss
ssFrame <- merge(ss[,c(2,4,6,7,8,9,10,11)]
,merge(bamFrame,peakFrame,by=1,all.x=T,all.y=F)
,by=1,all.x=F,all.y=F)
bamControl <- vector("character",length=nrow(ssFrame))
for(i in 1:nrow(ssFrame)){
if(any(ssFrame[,1] %in% ssFrame[i,2])){
bamControl[i] <- as.vector(ssFrame[ssFrame[,1] %in% ssFrame[i,2],9])
}else{
bamControl[i] <- NA
}
}
ssFrame
SS2 <- data.frame(
SampleID=as.vector(ssFrame[,1]),
Tissue=as.vector(ssFrame[,3]),
Factor=as.vector(ssFrame[,4]),
Condition=as.vector(ssFrame[,5]),
Treatment=as.vector(ssFrame[,6]),
Replicate=as.vector(ssFrame[,7]),
bamReads=as.vector(ssFrame[,9]),
bamControl=bamControl,
ControlID=as.vector(ssFrame[,2]),
Peaks=as.vector(ssFrame[,10]),
PeakCaller=c(rep("macs",nrow(ssFrame)))
#Peaks=c(rep(NA,7))
)
SS2
opts_chunk$set(cache=TRUE)
?ddsLRT
library(edgeR)
library(DESeq2)
?"DESeq"
48299773+17061693+26723443
48299773+26723443
?cor
?hclust
library(DESeq2)
?DEseq
?DESeq
217+186+674
sessionInfo()
source("https://bioconductor.org/biocLite.R")
biocLite("scater")
install.packages("devtools")
devtools::install_github("davismcc/scater", build_vignettes = TRUE)
devtools::install_github("davismcc/scater", ref = "release-R-3.2", build_vignettes = T)
install.packages("devtools")
install.packages("devtools")
devtools::install_github("davismcc/scater", ref = "release-R-3.2", build_vignettes = TRUE)
devtools::install_github("davismcc/scater", ref = "release-R-3.2", build_vignettes = TRUE, force = TRUE)
install.packages(c("data.table", "ggplot2", "knitr", "matrixStats", "MASS","plyr", "reshape2", "rjson", "testthat", "viridis"))
install.packages(c("data.table", "ggplot2", "knitr", "matrixStats",
library(DESeq2)
?result
?results
?DESeq
cnts <- matrix(rnbinom(n=1000, mu=100, size=1/0.5), ncol=10)
cond <- factor(rep(1:2, each=5))
# object construction
dds <- DESeqDataSetFromMatrix(cnts, DataFrame(cond), ~ cond)
# standard analysis
dds <- DESeq(dds)
res <- results(dds)
# an alternate analysis: likelihood ratio test
ddsLRT <- DESeq(dds, test="LRT", reduced= ~ 1)
resLRT <- results(ddsLRT)
dds
res
str(dds)
assays(dds)
assays(dds)$counts
ddsLRT
dds
resLRT
rld <- rlog(dds)
rld
rowData(rld)
head(assay(rld))
dds
dds$counts
assay(dds)
assay(dds)$count
assay(dds)
dds
dds
assay(dds)
assay(dds)$normalised
assay(dds,normalize=T)
haha<-count(dds, normalized=T)
?count
library("DESEQ2")
library(DESeq2)
?counts
haha<-counts(dds, normalized=T)
head(haha)
setwd("~/Downloads/mrccsc-StatisticsInR-3f4d20e/Statistics2016")
?ftable
1.7813/0.2838
?tp
?pt
pt(6.276603,df=50-2,lower.tail = F)
pt(6.276,df=50-2,lower.tail = F)
pt(6.276,df=50-2)
pt(6.276,df=50-2,lower.tail = F)
pt(6.276,df=50-2,lower.tail = F) *2
pt(1.7813/0.2838,df=50-2,lower.tail = F) *2
1.8693/0.2117
setwd("~/Downloads/mrccsc-StatisticsInR-3f4d20e/Statistics2016")
setwd("/CSC/workshop/StatisticsInR")
setwd("/CSC/workshop/StatisticsInR/Statistics2016")
