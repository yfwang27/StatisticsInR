MSE <- mean(lmResult$residuals^2)
RSS <- sum((predict(lmResult) - mean(iris_versi$Petal.Length))^2)
summary(lmResult)$fstatistic
MSE
RSS
MSE <- mean(lmResult$residuals^2)
RSS <- sum((predict(lmResult) - mean(iris_versi$Petal.Length))^2)
summary(lmResult)$fstatistic
library("tidyr")
install.packages("tidyr")
library("tidyr")
PlantGrowth
PlantGrowth$replicates<-c(rep(c(1:10),3))
PlantGrowth_wide<-spread(PlantGrowth, group, weight)
PlantGrowth_wide
PlantGrowth
PlantGrowth_wide
var(PlantGrowth_wide$ctrl)
var(PlantGrowth_wide$trt1)
var(PlantGrowth_wide$trt2)
var.test(PlantGrowth_wide$ctrl,PlantGrowth_wide$trt1)
var.test(PlantGrowth_wide$ctrl,PlantGrowth_wide$trt2)
result <- var.test(PlantGrowth_wide$ctrl, PlantGrowth_wide$trt1)
str(result)
var(PlantGrowth_wide$ctrl)
result$p.value
head(PlantGrowth_wide)
install.packages("ggplot2")
head(PlantGrowth)
p<-ggplot(PlantGrowth,aes(weight,colour=factor(group)))
library("ggplot2")
p<-ggplot(PlantGrowth,aes(weight,colour=factor(group)))
p<-p+geom_box()
p<-ggplot(PlantGrowth,aes(factor(group),weight))
p<-p+geom_boxplot()
p
ggplot(PlantGrowth,aes(factor(group),weight))
+ geom_boxplot()
ggplot(PlantGrowth,aes(factor(group),weight)) +
geom_boxplot()
Life_exp<-read.csv("data/Life_expectancy_at_birth.csv",header=T)
head(Life_exp)
head(PlantGrowth)
boxplot(weight~group,data=PlantGrowth,
col=(c("gold","darkgreen","blue")),
las=2, cex.axis=0.6)
library("tidyr")
PlantGrowth_wide<-spread(PlantGrowth, group, weight)
library("tidyr")
PlantGrowth_wide<-spread(PlantGrowth, group, weight)
head(PlantGrowth_wide)
PlantGrowth_wide<-spread(PlantGrowth, group, weight)
library("tidyr")
PlantGrowth_wide<-spread(PlantGrowth, group, weight)
head(PlantGrowth_wide)
PlantGrowth_wide<-spread(PlantGrowth, group, weight)
head(PlantGrowth_wide)
var(PlantGrowth_wide$ctrl)
var(PlantGrowth_wide$trt1)
var(PlantGrowth_wide$trt2)
var.test(PlantGrowth_wide$ctrl,
PlantGrowth_wide$trt1)
PlantGrowth_wide$trt1)
PlantGrowth_wide$trt2)
vote.leave=17410742
vote.remain=16141241
total.vote=vote.leave+vote.remain
binom.test(vote.leave, total.vote, p=0.5, alternative = "less")
PlantGrowth
data(PlantGrowth)
PlantGrowth
boxplot(weight~group,data=PlantGrowth,
col=(c("gold","darkgreen","blue")),
ylab="Weight")
library("tidyr")
PlantGrowth_wide<-spread(PlantGrowth, group, weight)
head(PlantGrowth_wide)
library("tidyr")
PlantGrowth_wide<-spread(PlantGrowth, group, weight)
head(PlantGrowth_wide)
head(library("tidyr"))
head(PlantGrowth)
PlantGrowthforwide<-PlantGrowth
PlantGrowthforwide$replicate<-rep(c(1:10),3)
PlantGrowthforwide
PlantGrowth_wide<-spread(PlantGrowthforwide, group, weight)
head(PlantGrowth_wide)
?anova
PlantGrowth
lm(formula = weight ~ group, data = PlantGrowth_wide)
PlantGrowth_wide
lm(formula = weight ~ group, data = PlantGrowth)
PG.lm<-lm(formula = weight ~ group, data = PlantGrowth)
anova(PG.lm)
?lm
pbinom()
?pbinom
?sample
set.seed(123)
?rbinom
N=10; n=1; p=0.5
test1<-rbinom(N,n,p)
test1
N=10; n=5; p=0.5
test1<-rbinom(N,n,p)
test1
set.seed(123)
# number, size and probability
N=10; n=1; p=0.5
rbinom(N,n,p)
N=10; n=2;
rbinom(N,n,p)
rbinom(N,n,p)
N=10; n=2;
N=10; n=1; p=0.5
rbinom(N,n,p)
set.seed(123)
N=10; n=1; p=0.5
rbinom(N,n,p)
test1<-rbinom(N,n,p)
test1
set.seed(123)
# number, size and probability
N=10; n=1; p=0.5
test1<-rbinom(N,n,p)
mean(test1)
mean(test1)
test2<-rbinom(N,n,p)
mean(test2)
N=10; n=1; p=0.5
test1<-rbinom(N,n,p)
mean(test1)
test2<-rbinom(N,n,p)
set.seed(123)
test1<-rbinom(N,n,p)
mean(test1)
test2<-rbinom(N,n,p)
mean(test2)
set.seed(123)
set.seed(123)
for (i in 1:10){
showtest<-rbinom(N,i,0.5)
showmean<-mean(showtest)
print(showmean)
}
set.seed(123)
for (i in 1:10){
showtest<-rbinom(N,1,0.5)
showmean<-mean(showtest)
print(showmean)
}
set.seed(123)
for (i in 1:10){
showtest<-rbinom(N,1,0.5)
print(showtest)
showmean<-mean(showtest)
print(showmean)
}
set.seed(123)
for (i in 1:10){
showtest<-rbinom(N,1,0.5)
showdensity<-dbinom(showtest, 10, 0.5, log = FALSE)
print(showdensity)
showmean<-mean(showtest)
print(showmean)
}
plot(showdensity)
showmean
hist(showmean)
hist(showmean,break=c(0,1))
?hist
hist(showmean,breaks=c(0,1))
?hist
hist(showmean,breaks=10)
hist(showmean,breaks=20)
hist(showmean,breaks=20,xlim=c(0,1))
plot(showmean)
hist(showmean,breaks=20)
hist(showmean,breaks=20,xlim=c(0,1),ylim=c(0,1000))
hist(showmean,breaks=20,xlim=c(0,1),ylim=c(0,100))
hist(showmean,breaks=12,xlim=c(0,1),ylim=c(0,100))
x <- seq(0,50,by=1)
y <- dbinom(x,50,0.2)
x
y
plot(x,y)
x <- seq(0,10,by=1)
y <- dbinom(x,100,0.5)
plot(x,y)
x <- seq(0,100,by=1)
y <- dbinom(x,100,0.5)
plot(x,y)
plot(1,showmean)
plot(showmean,1)
plot(showmean,1,type="o")
plot(showmean,1,type="o",pch=22)
plot(showmean,1,type="o",pch=22,lty=2)
plot(showmean,1,type="o",pch=22,ylim=c(0,100))
plot(showmean,1,type="o",pch=22,ylim=c(0,100),ylab="count")
plot(showmean,1,type="o",pch=22,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
set.seed(123)
set.seed(123)
# number, size and probability
N=10; n=1; p=0.5
test1<-rbinom(N,n,p)
showmean<-mean(test1)
plot(showmean,1,type="o",pch=22,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
test2<-rbinom(N,n,p)
mean(test2)
N=10; n=1; p=0.5
test1<-rbinom(N,n,p)
showmean<-mean(test1)
plot(showmean,1,type="o",pch=22,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
test2<-rbinom(N,n,p)
showmane<-mean(test2)
set.seed(123)
# number, size and probability
N=10; n=1; p=0.5
test1<-rbinom(N,n,p)
showmean<-mean(test1)
plot(showmean,1,type="o",pch=22,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
test2<-rbinom(N,n,p)
showmane<-mean(test2)
plot(showmean,1,type="o",pch=22,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
test2<-rbinom(N,n,p)
showmane<-mean(test2)
plot(showmean,1,type="o",pch=22,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
showmane
plot(showmean,1,type="o",pch=22,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
showmean<-mean(test2)
plot(showmean,1,type="o",pch=22,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
plot(showmean,1,type="o",pch=20,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
set.seed(123)
mat4plot<-as.matrix()
?as.matrix
mat4plot<-matrix(nrow=10,ncol=2)
mat4plot
set.seed(123)
mat4plot<-matrix(nrow=10,ncol=2)
for (i in 1:10){
showtest<-rbinom(N,1,0.5)
showdensity<-dbinom(showtest, 10, 0.5, log = FALSE)
print(showdensity)
showmean<-mean(showtest)
print(showmean)
mat4plot[i,1]<-showmean
}
mat4plot
mat4plot[,2]<-1
plot(mat4plot,1,type="o",pch=20,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
mat4plot
class(mat4plot)
plot(mat4plot,type="o",pch=20,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
plot(mat4plot,pch=20,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
mat4plot<-mat4plot[order(mat4plot[,1]),]
mat4plot
unique(mat4plot[,1])
box(mat4plot[,1])
?box
?box
boxplot(mat4plot[,1])
hist(mat4plot[,1])
hist(mat4plot[,1],xlim=c(0,1))
hist(mat4plot[,1],xlim=c(0,1),breaks=10)
showmean
set.seed(123)
# number, size and probability
N=10; n=1; p=0.5
test1<-rbinom(N,n,p)
showmean<-mean(test1)
showmean
test2<-rbinom(N,n,p)
showmean2<-mean(test2)
showmean2
set.seed(123)
# number, size and probability
N=10; n=1; p=0.5
test1<-rbinom(N,n,p)
showmean<-mean(test1)
showmean
test2<-rbinom(N,n,p)
showmean2<-mean(test2)
showmean2
set.seed(123)
test3<-rbinom(N,2,p)
showmean3<-mean(test3)
showmean3
set.seed(123)
mat4plot<-matrix(nrow=10,ncol=2)
for (i in 1:10){
showtest<-rbinom(N,1,0.5)
#showdensity<-dbinom(showtest, 10, 0.5, log = FALSE)
showmean<-mean(showtest)
mat4plot[i,1]<-showmean
}
mat4plot[,2]<-1
#mat4plot<-mat4plot[order(mat4plot[,1]),]
#plot(mat4plot,pch=20,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
hist(mat4plot[,1],xlim=c(0,1),breaks=10)
set.seed(123)
mat4plot<-matrix(nrow=100,ncol=2)
for (i in 1:100){
showtest<-rbinom(N,1,0.5)
#showdensity<-dbinom(showtest, 10, 0.5, log = FALSE)
showmean<-mean(showtest)
mat4plot[i,1]<-showmean
}
mat4plot[,2]<-1
#mat4plot<-mat4plot[order(mat4plot[,1]),]
#plot(mat4plot,pch=20,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
hist(mat4plot[,1],xlim=c(0,1),breaks=10)
set.seed(123)
mat4plot<-matrix(nrow=1000,ncol=2)
for (i in 1:1000){
showtest<-rbinom(N,1,0.5)
#showdensity<-dbinom(showtest, 10, 0.5, log = FALSE)
showmean<-mean(showtest)
mat4plot[i,1]<-showmean
}
mat4plot[,2]<-1
#mat4plot<-mat4plot[order(mat4plot[,1]),]
#plot(mat4plot,pch=20,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
hist(mat4plot[,1],xlim=c(0,1),breaks=10)
?hist
hist(mat4plot[,1],xlim=c(0,1),breaks=10,freq=T)
hist(mat4plot[,1],xlim=c(0,1),breaks=10,freq=F)
hist(mat4plot[,1],xlim=c(0,1),breaks=10)
hist(mat4plot[,1],xlim=c(0,1),breaks=100)
set.seed(123)
no.experiment=2
mat4plot<-matrix(nrow=no.experiment,ncol=2)
for (i in 1:no.experiment){
showtest<-rbinom(N,1,0.5)
#showdensity<-dbinom(showtest, 10, 0.5, log = FALSE)
showmean<-mean(showtest)
mat4plot[i,1]<-showmean
}
mat4plot[,2]<-1
#mat4plot<-mat4plot[order(mat4plot[,1]),]
#plot(mat4plot,pch=20,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
hist(mat4plot[,1],xlim=c(0,1),breaks=100)
set.seed(123)
no.experiment=1
mat4plot<-matrix(nrow=no.experiment,ncol=2)
for (i in 1:no.experiment){
showtest<-rbinom(N,1,0.5)
#showdensity<-dbinom(showtest, 10, 0.5, log = FALSE)
showmean<-mean(showtest)
mat4plot[i,1]<-showmean
}
mat4plot[,2]<-1
#mat4plot<-mat4plot[order(mat4plot[,1]),]
#plot(mat4plot,pch=20,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
hist(mat4plot[,1],xlim=c(0,1),breaks=100)
set.seed(123)
no.experiment=12
mat4plot<-matrix(nrow=no.experiment,ncol=2)
for (i in 1:no.experiment){
showtest<-rbinom(N,1,0.5)
#showdensity<-dbinom(showtest, 10, 0.5, log = FALSE)
showmean<-mean(showtest)
mat4plot[i,1]<-showmean
}
mat4plot[,2]<-1
#mat4plot<-mat4plot[order(mat4plot[,1]),]
#plot(mat4plot,pch=20,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
hist(mat4plot[,1],xlim=c(0,1),breaks=100)
set.seed(123)
no.experiment=100
mat4plot<-matrix(nrow=no.experiment,ncol=2)
for (i in 1:no.experiment){
showtest<-rbinom(N,1,0.5)
#showdensity<-dbinom(showtest, 10, 0.5, log = FALSE)
showmean<-mean(showtest)
mat4plot[i,1]<-showmean
}
mat4plot[,2]<-1
#mat4plot<-mat4plot[order(mat4plot[,1]),]
#plot(mat4plot,pch=20,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
hist(mat4plot[,1],xlim=c(0,1),breaks=100)
set.seed(123)
no.experiment=1000
mat4plot<-matrix(nrow=no.experiment,ncol=2)
for (i in 1:no.experiment){
showtest<-rbinom(N,1,0.5)
#showdensity<-dbinom(showtest, 10, 0.5, log = FALSE)
showmean<-mean(showtest)
mat4plot[i,1]<-showmean
}
mat4plot[,2]<-1
#mat4plot<-mat4plot[order(mat4plot[,1]),]
#plot(mat4plot,pch=20,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
hist(mat4plot[,1],xlim=c(0,1),breaks=100)
set.seed(123)
no.experiment=1000
mat4plot<-matrix(nrow=no.experiment,ncol=2)
N<-100
for (i in 1:no.experiment){
showtest<-rbinom(N,1,0.5)
#showdensity<-dbinom(showtest, 10, 0.5, log = FALSE)
showmean<-mean(showtest)
mat4plot[i,1]<-showmean
}
mat4plot[,2]<-1
#mat4plot<-mat4plot[order(mat4plot[,1]),]
#plot(mat4plot,pch=20,ylim=c(0,100),ylab="count",xlab="mean",xlim = c(0,1))
hist(mat4plot[,1],xlim=c(0,1),breaks=100)
?rbinom
set.seed(123)
# observation number, number of trials and probability of success on each trial
sample.size=10;
test1<-rbinom(sample.size,1,0.5)
test1
showmean<-mean(test1)
showmean
test2<-rbinom(sample.size,1,0.5)
showmean2<-mean(test2)
showmean2
set.seed(123)
# observation number, number of trials and probability of success on each trial
sample.size=10;
test1<-rbinom(sample.size,1,0.5)
test1
showmean<-mean(test1)
showmean
test2<-rbinom(sample.size,1,0.5)
showmean2<-mean(test2)
showmean2
set.seed(123)
no.experiment=2
mat4plot<-matrix(nrow=no.experiment,ncol=2)
mat4plot[,2]<-1
for (i in 1:no.experiment){
mat4plot[i,1]<-mean(rbinom(sample.size,1,0.5))
}
hist(mat4plot[,1],xlim=c(0,1),breaks=100,xlab="mean",main="flip a coin 10 times, and repeat 2 times")
set.seed(123)
no.experiment=100
mat4plot<-matrix(nrow=no.experiment,ncol=2)
mat4plot[,2]<-1
sample.size<-10
for (i in 1:no.experiment){
mat4plot[i,1]<-mean(rbinom(sample.size,1,0.5))
}
hist(mat4plot[,1],xlim=c(0,1),breaks=100,xlab="mean",main="flip a coin 10 times, and it repeat 100 times")
set.seed(123)
no.experiment=1000
mat4plot<-matrix(nrow=no.experiment,ncol=2)
mat4plot[,2]<-1
sample.size<-100
for (i in 1:no.experiment){
mat4plot[i,1]<-mean(rbinom(sample.size,1,0.5))
}
hist(mat4plot[,1],xlim=c(0,1),breaks=100,xlab="mean",main="flip a coin 100 times, and repeat it 100 times")
set.seed(123)
no.experiment=1000
mat4plot<-matrix(nrow=no.experiment,ncol=2)
mat4plot[,2]<-1
sample.size<-10
for (i in 1:no.experiment){
mat4plot[i,1]<-mean(rbinom(sample.size,1,0.5))
}
hist(mat4plot[,1],xlim=c(0,1),breaks=100,xlab="mean",main="flip a coin 10 times, and it repeat 100 times")
no.experiment=100
mat4plot<-matrix(nrow=no.experiment,ncol=2)
mat4plot[,2]<-1
sample.size<-10
for (i in 1:no.experiment){
mat4plot[i,1]<-mean(rbinom(sample.size,1,0.5))
}
hist(mat4plot[,1],xlim=c(0,1),breaks=100,xlab="mean",main="flip a coin 10 times, and it repeat 100 times")
hist(mat4plot[,1],xlim=c(0,1),breaks=100,xlab="mean",main="flip a coin 10 times, and repeat it 1,000 times",freq = F)
lines(density(mat4plot[,1]),col="red",lwd=3)
set.seed(123)
no.experiment=1000
mat4plot<-matrix(nrow=no.experiment,ncol=2)
mat4plot[,2]<-1
sample.size<-10
for (i in 1:no.experiment){
mat4plot[i,1]<-mean(rbinom(sample.size,1,0.5))
}
hist(mat4plot[,1],xlim=c(0,1),breaks=100,xlab="mean",main="flip a coin 10 times, and repeat it 1,000 times")
lines(density(mat4plot[,1]),col="red",lwd=3)
?hist
hist(mat4plot[,1],xlim=c(0,1),breaks=100,xlab="mean",main="flip a coin 10 times, and repeat it 1,000 times",density = T)
set.seed(14)
x <- rchisq(100, df = 4)
hist(x, freq = FALSE, ylim = c(0, 0.2))
curve(dchisq(x, df = 4), col = 2, lty = 2, lwd = 2, add = TRUE)
curve(dbinom(x, df = 4), col = 2, lty = 2, lwd = 2, add = TRUE)
?dbinom
curve(dbinom(mat4plot[,1], 1, 0.5), col = 2, lty = 2, lwd = 2, add = TRUE)
?curve
plot(qnorm)
plot(qbionorm)
?qnorm
qbinom()
plot(qbinom)
library("tidyr")
install.packages("tidyr")
library("tidyr")
PlantGrowthforwide<-PlantGrowth
PlantGrowthforwide$replicate<-rep(c(1:10),3)
PlantGrowth_wide<-spread(PlantGrowthforwide, group, weight)
head(PlantGrowth_wide)
PlantGrowth
data("PlantGrowth")
PlantGrowth
PlantGrowthforwide<-PlantGrowth
PlantGrowthforwide$replicate<-rep(c(1:10),3)
PlantGrowth_wide<-spread(PlantGrowthforwide, group, weight)
head(PlantGrowth_wide)
